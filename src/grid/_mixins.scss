/**
 *
 */
@mixin make-col($gutter: $grid-gutter-width) {
  position: relative;
  @if not $enable-flex {
    float: left;
  }
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);
}

@mixin make-col-span($size, $columns: $grid-columns) {
  @if $enable-flex {
    flex: 0 0 percentage($size / $columns);
  } @else {
    width: percentage($size / $columns);
  }
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  margin-left: percentage($size / $columns);
}

@mixin make-col-push($size, $columns: $grid-columns) {
  left: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-pull($size, $columns: $grid-columns) {
  right: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-modifier($type, $size, $columns) {
  // Work around the lack of dynamic mixin @include support (https://github.com/sass/sass/issues/626)
  @if $type == push {
    @include make-col-push($size, $columns);
  } @else if $type == pull {
    @include make-col-pull($size, $columns);
  } @else if $type == offset {
    @include make-col-offset($size, $columns);
  }
}

// 网格系统生成
@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // 公共属性
  %grid-column {
    position: relative;
    // 防止内容为空时塌陷
    min-height: 1px;
    // 左右两边各半个间隔宽度
    padding-left: ($gutter / 2);
    padding-right: ($gutter / 2);
  }
  @each $breakpoint in map-keys($breakpoints) {
    @for $i from 1 through $columns {
      .u-#{$breakpoint}-#{$i} {
        @extend %grid-column;
      }
    }
    @include media-breakpoint-up($breakpoint) {
      // Work around cross-media @extend (https://github.com/sass/sass/issues/1050)
      %grid-column-float-#{$breakpoint} {
        float: left;
      }
      @for $i from 1 through $columns {
        .u-#{$breakpoint}-#{$i} {
          @if not $enable-flex {
            @extend %grid-column-float-#{$breakpoint};
          }
          @include make-col-span($i, $columns);
        }
      }
      @each $modifier in (pull, push, offset) {
        @for $i from 0 through $columns {
          .u-#{$breakpoint}-#{$modifier}-#{$i} {
            @include make-col-modifier($modifier, $i, $columns)
          }
        }
      }
    }
  }
}
